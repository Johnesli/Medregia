from django.db.models import Q, F

@login_required(login_url='/')
def index_view(request):
    current_user = request.user
    invoices = Invoice.objects.filter(user=current_user)
    
    # Apply common filters to invoices
    payment_details = invoices.order_by('-id')
    q_details = invoices.filter(Q(balance_amount__gt=0.00) & ~Q(balance_amount=F('invoice_amount'))).order_by('-id')
    search_details = invoices.filter(balance_amount=0.00, payment_amount=0).order_by('-id')
    payed_details = invoices.filter(balance_amount=0.00).order_by('-id')
    
    unique_code = Person.objects.get(user=request.user)
    unique_id = unique_code.UniqueId
    
    history_instance = current_user
    history_entries = history_instance.history.all()
    print(history_entries)

    if request.method == 'POST':
        query = request.POST.get('payment_list')
        if query is not None:
            lookups = Q(pharmacy_name__icontains=query)
            payment_details = invoices.filter(lookups).order_by('-id')

        paied = request.POST.get('payed')
        if paied is not None:
            search_payed = Q(pharmacy_name__icontains=paied)
            payed_details = invoices.filter(search_payed).order_by('-id')

        q = request.POST.get('q')
        if q is not None:
            q_payed = Q(pharmacy_name__icontains=q)
            q_details = invoices.filter(q_payed).order_by('-id')

        search = request.POST.get('search')
        if search is not None:
            search_data = Q(pharmacy_name__icontains=search)
            search_details = invoices.filter(search_data).order_by('-id')

        invoice_form = InvoiceForm(request.POST)
        if invoice_form.is_valid():
            invoice = invoice_form.save(commit=False)
            invoice.user = request.user
            invoice.save()

    else:
        invoice_form = InvoiceForm()

    context = {
        'form': invoice_form,
        'payment': payment_details,
        'payed_details': payed_details,
        'q': q_details,
        'search': search_details,
        'uniqueid': unique_id,
        'history': history_entries,
    }
    return render(request, 'invclc/index.html', context)

